<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Y2017W19]]></title>
      <url>/blog/2017/05/13/Y2017W19/</url>
      <content type="html"><![CDATA[<h2 id="Blog-posts"><a href="#Blog-posts" class="headerlink" title="Blog posts"></a>Blog posts</h2><ul>
<li><a href="https://kaddopur.github.io/blog/2017/05/10/prettier/">使用 prettier 自動調整 JavaScript 樣式</a></li>
</ul>
<h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h2><ul>
<li><a href="http://design-patterns.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="external">图说设计模式</a><ul>
<li>看懂UML类图和时序图</li>
<li>创建型模式<ol>
<li>简单工厂模式( Simple Factory Pattern )</li>
</ol>
</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h2><ul>
<li><a href="http://iknow.jp" target="_blank" rel="external">iKnow!</a></li>
<li><a href="https://lingvist.com/" target="_blank" rel="external">LINGVIST</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 週記 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 prettier 自動調整 JavaScript 樣式]]></title>
      <url>/blog/2017/05/10/prettier/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>prettier</code> 是一款 JavaScript 的樣式處理工具，它類似 golang 的 <code>gofmt</code> 可以自動排版你的程式。除了 Vanilla JS 之外，尚支援了 ES6, jsx, Flow 以及正在開發中的 TypeScript。它是由 <a href="https://twitter.com/vjeux" target="_blank" rel="external">vjeux (Christopher Chedeau)</a>  開發，在 <a href="https://github.com/prettier/prettier" target="_blank" rel="external">github</a> 上面約有 10,000 個 stars。</p>
<p><code>prettier</code> 從今年一月的第一個 commit 開始到現在快半年，不過到它真正引起我的興趣，是從上週 (5/3) 釋出的 <code>v1.3.0</code> 開始。至於這個版本有什麼特別的功能嗎？非也。主要是因為這個版本有公開它在 Facebook 內部各專案使用 <code>prettier</code> 的情形。</p>
<a id="more"></a>
<blockquote>
<p>The first projects to adopt prettier were Jest, React and immutable-js. Those are small codebases in the order of hundreds of files that have their own infrastructure. There are a handful of people working on them full time.<br><br>Then, Oculus and Nuclide converted their codebase over. The scale is bigger with a few thousands of files and tens of full time contributors but looks pretty similar to the first projects. The conversions went in one big codemod and that’s it.</p>
</blockquote>
<p>可以看到 Facebook 的專案一個接一個開始用 <code>prettier</code> 來規範及管理他們的 JavaScript 樣式，而 <code>prettier</code> 和我們平常在用的 <code>eslint</code> 或是其他的 lint 工具相比之下孰優孰劣呢？</p>
<h2 id="優點"><a href="#優點" class="headerlink" title="優點"></a>優點</h2><ol>
<li><p><strong>一致性 Consistency</strong><br>同一種表達式對於不同的人可能會有不同的寫法，使用 <code>prettier</code> 可以輕易保持代碼中樣式的一致式，避免個人習慣樣式的不同。</p>
</li>
<li><p><strong>可教性 Teachability</strong><br>經過 <code>prettier</code> 調整格式之後，你可以知道 JavaScript 引擎是怎麼解析你所寫的代碼，進而幫助你養成良好的撰寫習慣來避免一些語意上的錯誤。例如：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> x = value1 &amp;&amp; value2 || value3 &amp;&amp; value4;</div></pre></td></tr></table></figure>
<p>會幫你加上括號</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> x = (value1 &amp;&amp; value2) || (value3 &amp;&amp; value4);</div></pre></td></tr></table></figure>
</li>
<li><p><strong>自由度 Freedom</strong><br>只需要專心在寫代碼這件事就好了，不用刻意去手動調整樣式。在抽函數的時候也蠻有用的。</p>
</li>
</ol>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p><code>prettier</code> 提供了 CLI 方便你轉換檔案。你也可以將 <code>prettier</code> 設定在專案的工作流程中，在 commit 時自動排版並簽入至你的 repo。或是你也可以將 <code>prettier</code> 與你最愛的編輯器綁定，讓你在存檔時可以自動排版並看到結果。以下會分別介紹。</p>
<p>可以局部安裝到你的專案<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn add prettier --dev</div></pre></td></tr></table></figure></p>
<p>或是全局安裝<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn global add prettier</div></pre></td></tr></table></figure></p>
<h3 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h3><p>使用方式如下，可以選擇想要轉換的檔案。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ prettier [opts] [filename ...]</div></pre></td></tr></table></figure></p>
<p>實際上使用的情形可能會像這樣<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ prettier --single-quote --write &quot;&#123;app,__&#123;tests,mocks&#125;__&#125;/**/*.js&quot;</div></pre></td></tr></table></figure></p>
<p>想要知道有什麼參數可以下，可以輸入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ prettier</div><div class="line">Usage: prettier [opts] [filename ...]</div><div class="line"></div><div class="line">Available options:</div><div class="line">  --write                  Edit the file in-place. (Beware!)</div><div class="line">  --list-different or -l   Print filenames of files that are different from Prettier formatting.</div><div class="line">  --stdin                  Read input from stdin.</div><div class="line">  --print-width &lt;int&gt;      Specify the length of line th</div><div class="line">  ...</div></pre></td></tr></table></figure></p>
<p>會列出所有可以用的選項</p>
<h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><p>將 <code>husky</code> 和 <code>lint-staged</code> 加到專案的 devDependencies<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn add lint-staged husky --dev</div></pre></td></tr></table></figure></p>
<p>在 <code>package.json</code> 中填加以下 config<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"precommit"</span>: <span class="string">"lint-staged"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"lint-staged"</span>: &#123;</div><div class="line">    <span class="attr">"*.js"</span>: [</div><div class="line">      <span class="string">"prettier --write"</span>,</div><div class="line">      <span class="string">"git add"</span></div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>husky</code> 會讓專案在 git commit 時執行 “precommit” 這個命令。而在 <code>lint-staged</code> 中，會檢查所有被 stage 的檔案，如果有符合特定檔名，就會再運行指定的命令。</p>
<p>在上面的例子中，我們會在 git commit 之前，對所有被 stage 的 JavaScript 檔案運行 <code>prettier</code> 後，再重新 stage 更新後的檔案，以確保所有進入 repo 的代碼的樣式正確。</p>
<h3 id="Editor"><a href="#Editor" class="headerlink" title="Editor"></a>Editor</h3><p><code>prettier</code> 對大部分的編輯器都有對應的工具，這邊以我的編輯器 VS Code 為例。</p>
<p>去 MartketPlace 下載 <a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="external">Prettier - JavaScript formatter</a>。安裝完成後，可以用 <code>CMD + Shift + P</code> 來重新排版整個檔案，或是用 <code>CMD + Shift + P</code> 重排所選擇的區域。</p>
<p>想要調整 <code>prettier</code> 所使用的排版選項，可以在 <code>User Settings</code> 來全局更改所想要的 <code>prettier</code> 參數，或是也可以用 <code>Workspace Settings</code> 來按照不同專案設定不同選項。</p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>在專案中，可以無痛導入工作流程而不用特別針對樣式錯誤去手動調整是 <code>prettier</code> 的一大優勢，可以讓 coding style 一次到位，也沒有撰寫代碼時多餘的打字或心理成本。</p>
<p>對於已經導入 <code>eslint</code> 並有團隊自訂 rule set 的專案，<code>prettier</code> 雖可以用參數調整所產出的代碼，但可以調整的地方有限，所產出的代碼也不一定會完全相符於之前的 rule set，這時必定要與團隊成員有良好溝通再行導入，畢竟<strong>“團隊的樣式就是最好的樣式”</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 新知 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> prettier </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Facebook </tag>
            
            <tag> tool </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Y2017W18]]></title>
      <url>/blog/2017/05/06/Y2017W18/</url>
      <content type="html"><![CDATA[<h2 id="Articles"><a href="#Articles" class="headerlink" title="Articles"></a>Articles</h2><ul>
<li><a href="https://blog.louie.lu/2017/04/30/%E9%96%8B%E7%99%BC%E4%BA%BA%E5%93%A1%E7%9A%84%E9%9D%A2%E8%A9%A6%E6%8C%87%E5%8D%97-a-developers-guide-to-interviewing/" target="_blank" rel="external">開發人員的面試指南 – A developer’s guide to interviewing</a><br>  面試時除了面試官問你問題，你也可以反過來詢問這間公司的工作環境、獲利手段或願景等等。文中列舉你可能會想問的問題，並依詢問對象區分為工程師、管理階層以及 CTO。很適合已有實習經驗或是想換工作的工程師閱讀。</li>
<li><a href="https://mathiasbynens.github.io/rel-noopener/" target="_blank" rel="external">About rel=noopener</a><br>  網頁中的 <code>&lt;a&gt;</code> 在連至外部網站時，需要帶上 <code>rel=&quot;noopener&quot;</code>，以避免惡意網站利用 <code>window.opener</code> 來改動原始網頁。</li>
<li><a href="https://softnshare.wordpress.com/2016/02/24/10classprogrammerbooks/" target="_blank" rel="external">每位認真的程式設計師都要讀的10本經典書</a><br>  看過其中三本<blockquote>
<ol>
<li>The Pragmatic Programmer<br> (程序員修煉之道︰從小工到專家︰評注版)</li>
<li>The Mythical Man-month: Essays on Software Engineering 👍<br> (人月神話:軟體專案管理之道)</li>
<li>Clean Code: A Handbook of Agile Software Craftsmanship<br> (無瑕的程式碼－敏捷軟體開發技巧守則)</li>
<li>The Clean Coder: A Code of Conduct for Professional Programmers<br> (無瑕的程式碼番外篇－專業程式設計師的生存之道)</li>
<li>Refactoring: Improving the Design of Existing Code<br> (重構─改善既有程式的設計)</li>
<li>Working Effectively with Legacy Code<br> (修改代碼的藝術)</li>
<li>Code Complete: A Practical Handbook of Software Construction<br> (代碼大全 2)</li>
<li>Head First Design Patterns 👍<br> (深入淺出設計模式)</li>
<li>Peopleware: Productive Projects and Teams<br> (Peopleware：腦力密集產業的人才管理之道)</li>
<li>Soft Skills: The software developer’s life manual 👍<br>(軟體技能代碼之外的生存指南)</li>
</ol>
</blockquote>
</li>
</ul>
<a id="more"></a>
<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul>
<li><a href="https://developers.google.com/web/tools/lighthouse/" target="_blank" rel="external">Google Lighthouse</a><br>  這個 google extension 是用來檢測網頁在行動裝置上的優化程度，包含是不是 <code>https</code>，有沒有支援離線模式……等等。</li>
<li><a href="https://github.com/prettier/prettier" target="_blank" rel="external">Prettier - an opinionated JavaScript formatter.</a><br>  是目前 facebook 的專案採用的 js formatter，對各種編緝器的支援也很好，還有 CLI 可以用。 </li>
</ul>
<h2 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h2><ul>
<li><a href="http://iknow.jp" target="_blank" rel="external">iKnow!</a></li>
<li><a href="https://lingvist.com/" target="_blank" rel="external">LINGVIST</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 週記 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> prettier </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Y2017W17]]></title>
      <url>/blog/2017/04/29/Y2017W17/</url>
      <content type="html"><![CDATA[<h2 id="Leetcode"><a href="#Leetcode" class="headerlink" title="Leetcode"></a>Leetcode</h2><ul>
<li><a href="https://leetcode.com/problems/merge-sorted-array/#/description" target="_blank" rel="external">88. Merge Sorted Array</a></li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/#/description" target="_blank" rel="external">26. Remove Duplicates from Sorted Array</a></li>
<li><a href="https://leetcode.com/problems/third-maximum-number/#/description" target="_blank" rel="external">414. Third Maximum Number</a></li>
<li><a href="https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/#/description" target="_blank" rel="external">448. Find All Numbers Disappeared in an Array</a></li>
<li><a href="https://leetcode.com/problems/k-diff-pairs-in-an-array/#/description" target="_blank" rel="external">532. K-diff Pairs in an Array</a></li>
<li><a href="https://leetcode.com/problems/array-partition-i/#/description" target="_blank" rel="external">561. Array Partition I</a></li>
</ul>
<a id="more"></a>
<h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h2><ul>
<li><a href="https://www.amazon.cn/gp/product/B01J9MZPPO" target="_blank" rel="external">软技能 代码之外的生存指南</a> - <em>John Z. Sonmez, 王小刚</em><ul>
<li>Chapter 17 ~ 71</li>
</ul>
</li>
</ul>
<h2 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h2><ul>
<li><a href="http://iknow.jp" target="_blank" rel="external">iKnow!</a></li>
<li><a href="https://lingvist.com/" target="_blank" rel="external">LINGVIST</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 週記 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Y2017W16]]></title>
      <url>/blog/2017/04/22/Y2017W16/</url>
      <content type="html"><![CDATA[<h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h2><ul>
<li><a href="https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453" target="_blank" rel="external">Programming Phoenix: Productive |&gt; Reliable |&gt; Fast</a> - <em>Chris McCord</em><ul>
<li>Chapter 4 - Ecto and Changesets</li>
<li>Chapter 5 - Authenticating Users</li>
</ul>
</li>
<li><a href="https://www.amazon.cn/gp/product/B01J9MZPPO" target="_blank" rel="external">软技能 代码之外的生存指南</a> - <em>John Z. Sonmez, 王小刚</em><ul>
<li>Chapter 1 ~ 16</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h2><ul>
<li><a href="http://iknow.jp" target="_blank" rel="external">iKnow!</a></li>
<li><a href="https://lingvist.com/" target="_blank" rel="external">LINGVIST</a></li>
</ul>
<h2 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h2><ul>
<li><a href="https://egghead.io/lessons/react-understand-the-difference-between-the-react-router-v4-router-types" target="_blank" rel="external">Understand the Difference Between the React Router v4 Router Types</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 週記 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Elixir </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[四年多來的第一篇]]></title>
      <url>/blog/2016/05/09/new-post-after-4-years/</url>
      <content type="html"><![CDATA[<p>最近又開始想寫 blog 了，<br>上一次有這個想法是在 4 年前用 octopress 來架靜態網站，<br>不過才寫了兩篇就沒戲了<br>其中一篇還是像這篇一樣的心得文QQ</p>
<p>希望這次能持續久一點</p>
<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> 隨筆 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
